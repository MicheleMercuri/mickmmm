
##############################################################################################################
#### il Package originale è stato scaricato da https://hassiohelp.eu/2019/03/02/controllo-consumi-costi/  ####
####                sono state aggiornate le automazioni non più funzionanti                              ####
####                   dopo gli ultimi aggiornamenti di HA del 2021/2022                                  ####
####                     -----------------------------------------------                                  ####
##############################################################################################################

########## sensori monitor consumi ######
utility_meter:
  consumo_giornaliero:
    source: sensor.template_grid_consumpt_2
    cycle: daily
    tariffs:
      - f1
      - f2

  consumo_mensile:
    source: sensor.template_grid_consumpt_2
    cycle: monthly
    tariffs:
      - f1
      - f2
  consumo_bimestrale:
    source: sensor.template_grid_consumpt_2
    cycle: bimonthly
    tariffs:
      - f1
      - f2

  consumo_annuale:
    source: sensor.template_grid_consumpt_2
    cycle: yearly
    tariffs:
      - f1
      - f2

###### input number per costi ######

input_number:
  costo_f1:
    name: Costo Energia elettrica Fascia 1
    min: 0.00001
    max: 0.50000
    unit_of_measurement: "€"
    initial: 0.203874
    mode: box
    icon: mdi:currency-eur

  costo_f2:
    name: Costo Energia elettrica Fascia 2
    min: 0.00001
    max: 0.50000
    unit_of_measurement: "€"
    initial: 0.179509
    mode: box
    icon: mdi:currency-eur

  consumo_mese_precedente:
    name: Consumo Mensile
    min: 0
    max: 1000000
    step: 0.01
    mode: box
    unit_of_measurement: "kWh"

  consumo_mese_precedente_f1:
    name: Consumo Mensile
    min: 0
    max: 1000000
    step: 0.01
    mode: box
    unit_of_measurement: "kWh"

  consumo_mese_precedente_f2:
    name: Consumo Mensile
    min: 0
    max: 1000000
    step: 0.01
    mode: box
    unit_of_measurement: "kWh"

  costo_mese_precedente:
    name: Costo Mensile
    min: 0
    max: 5000
    step: 0.001
    mode: box
    unit_of_measurement: €

  consumo_anno_precedente:
    name: Consumo Annuale
    min: 0
    max: 1000000
    step: 0.01
    mode: box
    unit_of_measurement: "kWh"

  costo_anno_precedente:
    name: Costo Annuale
    min: 0
    max: 5000
    step: 0.001
    mode: box
    unit_of_measurement: €

########## input_boolean per tariffa weekend ######

input_boolean:
  tariffa_weekend:
    name: Tariffa Week-end/festivi
    icon: mdi:calendar-range

########   orari inizio F1 ed F2  #########

input_datetime:
  f1_ora_inizio:
    name: "Orario Inizio Fascia 1"
    has_date: false
    has_time: true
    initial: "08:00"

  f2_ora_inizio:
    name: "Orario Inizio Fascia 2"
    has_date: false
    has_time: true
    initial: "19:00"

###### sensore per giorni feriali e festivi  #######

binary_sensor:
  - platform: workday
    name: giorni fascia elettrica
    country: IT

######  sensori vari #####
sensor:
  - platform: template
    sensors:
      costo_consumo_oggi_f1:
        friendly_name_template: "Costo Consumo Oggi fascia 1"
        icon_template: mdi:currency-eur
        value_template: "{{((states.sensor.consumo_giornaliero_f1.state | float) * (states.input_number.costo_f1.state| float)) | round(2) }}"
        unit_of_measurement: "€"

      costo_consumo_oggi_f2:
        friendly_name_template: "Costo Consumo Oggi fascia 2"
        icon_template: mdi:currency-eur
        value_template: "{{((states.sensor.consumo_giornaliero_f2.state | float) * (states.input_number.costo_f2.state| float)) | round(2) }}"
        unit_of_measurement: "€"

      consumo_totale_oggi:
        friendly_name_template: " Consumo Oggi "
        icon_template: mdi:counter
        value_template: "{{((states.sensor.consumo_giornaliero_f1.state | float) + (states.sensor.consumo_giornaliero_f2.state | float)) | round(3) }}"
        unit_of_measurement: "KWh"

      costo_consumo_oggi_totale:
        friendly_name_template: "Costo Consumo Oggi"
        icon_template: mdi:currency-eur
        value_template: "{{((states.sensor.costo_consumo_oggi_f1.state | float) + (states.sensor.costo_consumo_oggi_f2.state| float)) | round(2) }}"
        unit_of_measurement: "€"

      # sensore per plancia energia #
      costo_consumo_plancia:
        friendly_name_template: "Costo Consumo Oggi Plancia"
        icon_template: mdi:currency-eur
        value_template: "{{((states.sensor.costo_consumo_oggi_f1.state | float) + (states.sensor.costo_consumo_oggi_f2.state| float)) | round(2) }}"
        unit_of_measurement: "€"

      #####

      costo_consumo_mensile_f1:
        friendly_name_template: "Costo Consumo mensile fascia 1"
        icon_template: mdi:currency-eur
        value_template: "{{((states.sensor.consumo_mensile_f1.state | float) * (states.input_number.costo_f1.state| float)) | round(2) }}"
        unit_of_measurement: "€"

      costo_consumo_mensile_f2:
        friendly_name_template: "Costo Consumo mensile fascia 2"
        icon_template: mdi:currency-eur
        value_template: "{{((states.sensor.consumo_mensile_f2.state | float) * (states.input_number.costo_f2.state| float)) | round(2) }}"
        unit_of_measurement: "€"

      consumo_totale_mensile:
        friendly_name_template: "Consumo mensile"
        icon_template: mdi:counter
        value_template: "{{((states.sensor.consumo_mensile_f1.state | float) + (states.sensor.consumo_mensile_f2.state | float)) | round(3) }}"
        unit_of_measurement: "KWh"

      costo_consumo_mensile_totale:
        friendly_name_template: "Costo Consumo mensile"
        icon_template: mdi:currency-eur
        value_template: "{{((states.sensor.costo_consumo_mensile_f1.state | float) + (states.sensor.costo_consumo_mensile_f2.state| float)) | round(2) }}"
        unit_of_measurement: "€"

      #####

      costo_consumo_annuale_f1:
        friendly_name_template: "Costo Consumo annuale fascia 1"
        icon_template: mdi:currency-eur
        value_template: "{{((states.sensor.consumo_annuale_f1.state | float) * (states.input_number.costo_f1.state| float)) | round(2) }}"
        unit_of_measurement: "€"

      costo_consumo_annuale_f2:
        friendly_name_template: "Costo Consumo annuale fascia 2"
        icon_template: mdi:currency-eur
        value_template: "{{((states.sensor.consumo_annuale_f2.state | float) * (states.input_number.costo_f2.state| float)) | round(2) }}"
        unit_of_measurement: "€"

      consumo_totale_annuale:
        friendly_name_template: "Consumo annuale"
        icon_template: mdi:counter
        value_template: "{{((states.sensor.consumo_annuale_f1.state | float) + (states.sensor.consumo_annuale_f2.state | float)) | round(3) }}"
        unit_of_measurement: "KWh"

      costo_consumo_annuale_totale:
        friendly_name_template: "Costo Consumo annuale"
        icon_template: mdi:currency-eur
        value_template: "{{((states.sensor.costo_consumo_annuale_f1.state | float) + (states.sensor.costo_consumo_annuale_f2.state| float)) | round(2) }}"
        unit_of_measurement: "€"

      # questo sensore serve per sapere quando è l'ultimo giorno del mese #
      giorno_del_mese:
        value_template: >
          {% set dd = now().day %}
          {% set dm = now().month %}
          {% set nm = (as_timestamp(now()) + (24*3600))| timestamp_custom('%m', True) | int %}
          {% if (dm!=nm ) %}
          ultimo
          {% else %}
          {{dd}}
          {% endif %}

  ####### abilita il sensore time ######
  - platform: time_date
    display_options:
      - "time"
      - "date"
      - "date_time"

####### automazioni cambio fascia  ##########
##### le potete spostare in automations.yaml #########
automation:
  - id: "1402708834191"
    alias: Cambio Tariffa F1 con festivi
    trigger:
      - platform: time
        at: input_datetime.f1_ora_inizio
    condition:
      - condition: and
        conditions:
          - condition: state
            entity_id: binary_sensor.giorni_fascia_elettrica
            state: "on"
          - condition: state
            entity_id: input_boolean.tariffa_weekend
            state: "on"
    action:
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_giornaliero
        data:
          option: f1
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_mensile
        data:
          option: f1
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_annuale
        data:
          option: f1
    initial_state: true
  - id: "1788142281176"
    alias: Cambio Tariffa F2 con festivi
    trigger:
      - platform: time
        at: input_datetime.f2_ora_inizio
    condition:
      - condition: and
        conditions:
          - condition: state
            entity_id: binary_sensor.giorni_fascia_elettrica
            state: "on"
          - condition: state
            entity_id: input_boolean.tariffa_weekend
            state: "on"
    action:
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_giornaliero
        data:
          option: f2
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_mensile
        data:
          option: f2
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_annuale
        data:
          option: f2
    initial_state: true
  - id: "1448554953140"
    alias: Cambio Tariffa f2 giorni festivi
    description: ""
    trigger:
      - platform: state
        entity_id: binary_sensor.giorni_fascia_elettrica
        to: "off"
    condition:
      - condition: state
        entity_id: input_boolean.tariffa_weekend
        state: "on"
    action:
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_giornaliero
        data:
          option: f2
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_mensile
        data:
          option: f2
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_annuale
        data:
          option: f2
    initial_state: true
  - id: "1360557129066"
    alias: Cambio Tariffa F1 senza festivi
    trigger:
      - platform: time
        at: input_datetime.f1_ora_inizio
    condition:
      - condition: state
        entity_id: input_boolean.tariffa_weekend
        state: "off"
    action:
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_giornaliero
        data:
          option: f1
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_mensile
        data:
          option: f1
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_annuale
        data:
          option: f1
    initial_state: true
  - id: "1359486537578"
    alias: Cambio Tariffa F2 senza festivi
    trigger:
      - platform: time
        at: input_datetime.f2_ora_inizio
    condition:
      - condition: state
        entity_id: input_boolean.tariffa_weekend
        state: "off"
    action:
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_giornaliero
        data:
          option: f2
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_mensile
        data:
          option: f2
      - service: select.select_option
        target:
          entity_id:
            - select.consumo_annuale
        data:
          option: f2
    initial_state: true
  - id: "1372094411739"
    alias: Costi Consumi Mese Precedente
    trigger:
      platform: time
      at: "23:59:45"
    condition:
      - condition: template
        value_template: "{{(states.sensor.giorno_del_mese.state == 'ultimo')}}"
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.consumo_mese_precedente
          value: "{{ (states.sensor.consumo_totale_mensile.state | float) }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.consumo_mese_precedente_f1
          value: "{{ (states.sensor.consumo_mensile_f1.state | float) }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.consumo_mese_precedente_f2
          value: "{{ (states.sensor.consumo_mensile_f2.state | float) }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.costo_mese_precedente
          value: "{{ (states.sensor.costo_consumo_mensile_totale.state | float) }}"
      - service: notify.mobile_app_realmemm
        data:
          message: 'Report Consumi Mensili

            Consumo: {{(states.input_number.consumo_mese_precedente.state | float)| round(2)
            }} kWh

            Spesa: {{(states.input_number.costo_mese_precedente.state | float)| round(2)
            }} €"

            '
  - id: "1134616775134"
    alias: Costi Consumi Anno Precedente
    trigger:
      platform: time
      at: "23:59:55"
    condition:
      - condition: template
        value_template: '{{ now().strftime("%m") == "12" }}'
      - condition: template
        value_template: "{{(states.sensor.giorno_del_mese.state == 'ultimo')}}"
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.consumo_anno_precedente
          value: "{{ (states.sensor.consumo_totale_annuale.state | float) }}"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.costo_anno_precedente
          value: "{{ (states.sensor.costo_consumo_annuale_totale.state | float) }}"
      - service: notify.mobile_app_realmemm
        data:
          message: 'Report Consumi Annuali

            Consumo: {{(states.input_number.consumo_anno_precedente.state | float)| round(2)
            }} kWh

            Spesa: {{(states.input_number.costo_anno_precedente.state | float)| round(2)
            }} €"'
